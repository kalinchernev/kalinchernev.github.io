{"version":3,"sources":["webpack:///./src/pages/index.jsx"],"names":["Home","posts","data","allMarkdownRemark","edges","htmlAttributes","lang","charSet","name","content","className","map","node","post","frontmatter","to","slug","title","excerpt","query"],"mappings":"0FAAA,kGAqDeA,UA/CF,SAAC,GAAc,IACXC,EADU,EAAXC,KACgBC,kBAAtBC,MAER,OACE,6BACE,kBAAC,IAAD,CAAQC,eAAgB,CAAEC,KAAM,OAC9B,0BAAMC,QAAQ,UACd,0BACEC,KAAK,WACLC,QAAQ,2DAEV,0BACED,KAAK,2BACLC,QAAQ,gDAEV,kEAEF,wBAAIC,UAAU,WACXT,EAAMU,IAAI,YAAe,IAAZC,EAAW,EAAXA,KACNC,EAAOD,EAAKE,YAClB,OACE,4BACE,kBAAC,IAAD,CAAMC,GAAIF,EAAKG,MACb,4BAAKH,EAAKI,OACV,2BAAIL,EAAKM,cAMnB,kBAAC,IAAD,CAAMH,GAAG,cAAT,iBAmBC,IAAMI,EAAK","file":"component---src-pages-index-jsx-ef85e0a3e314407f2d85.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport Link from 'gatsby-link';\n\nconst Home = ({ data }) => {\n  const { edges: posts } = data.allMarkdownRemark;\n\n  return (\n    <div>\n      <Helmet htmlAttributes={{ lang: 'en' }}>\n        <meta charSet=\"utf-8\" />\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width, initial-scale=1.0 shrink-to-fit=no\"\n        />\n        <meta\n          name=\"google-site-verification\"\n          content=\"M3xN17b8dlWWV8ecUcM0iE7INS1WSbBYbDADkVpFElM\"\n        />\n        <title>Kalin Chernev Personal Website</title>\n      </Helmet>\n      <ul className=\"listing\">\n        {posts.map(({ node }) => {\n          const post = node.frontmatter;\n          return (\n            <li>\n              <Link to={post.slug}>\n                <h3>{post.title}</h3>\n                <p>{node.excerpt}</p>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n      <Link to=\"/history/2\">Older posts</Link>\n    </div>\n  );\n};\n\nHome.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.shape({\n        slug: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        excerpt: PropTypes.string.isRequired,\n      }).isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default Home;\n\nexport const query = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      limit: 10\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 400)\n          id\n          frontmatter {\n            title\n            slug\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}