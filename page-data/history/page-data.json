{"componentChunkName":"component---src-templates-post-list-jsx","path":"/history/","webpackCompilationHash":"d00368d3ad4ca550aaeb","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"group":[{"node":{"excerpt":"Introduction There are 24 official languages in the European Union. Creating a Gatsby.js website in so many languages is an edge case for which the guide on localization and internationalization with Gatsby.js might not help. In this article I'll reflect on the topic of i18n with Gatsby.js, the available plugins and core APIs. Mostly, how to use core APIs to create a scalable system for delivering…","frontmatter":{"title":"Multilingual Gatsby.js","slug":"multilingual-gatsbyjs","tags":["i18n","l10n","JavaScript","GatsbyJS"]}}},{"node":{"excerpt":"Learning Vim and its ideology has been a personal quest for several years. The journey started with vimium so that I can learn \"how to walk\". Later, I started experimenting with editor extensions such as ideavim and VSCodeVim. I tried to learn Vim on-the-go and not from scratch, as most people probably do. That played its part in lack of focus, though I aimed to remain decently productive in my…","frontmatter":{"title":"Learning VIM","slug":"learning-vim","tags":["Tools","Productivity","Vim"]}}},{"node":{"excerpt":"As I've been drafting a strategy to solve the AWS Lambda timeout limitations I felt I'm getting closer to solving an issue which keeps me away from sleeping well sometimes. True that there are known patterns for reaching higher scalability using SQS though the problems at hand were not easy to solve with either of those when the AWS Lambda is used as a core compute service. During the same period…","frontmatter":{"title":"Solve AWS Lambda timeout limitations","slug":"solve-aws-lambda-timeout-limitations","tags":["AWS","Serverless","Docker","ECS","JavaScript"]}}},{"node":{"excerpt":"Recently, I read an article about using Fargate for long-running processes. The article explains the fundamentals well, though in my view it's not touching upon a few important details I expected to see. So in this article I'll build upon this article and reflect on some possible tweaks. The next ideas will be demonstrated with Node.js, though any other runtime would work just as fine. In the end…","frontmatter":{"title":"Solving the AWS Lambda timeout limitation with Amazon ECS Fargate","slug":"solving-aws-lambda-timeouts-fargate","tags":["AWS","Serverless","Docker","ECS","JavaScript"]}}},{"node":{"excerpt":"Although this article is meant to be an overview of several topics regarding quality assurance in GatsbyJS projects, same principles and tools apply to any professional JavaScript project. When a project grows, standards play bigger and more important role in ensuring problems remain manageable, i.e. the codebase of the given project remains sane to maintain. When applied and followed properly…","frontmatter":{"title":"Quality assurance in GatsbyJS projects - linting and testing","slug":"gatsbyjs-qa-linting-testing","tags":["JAMStack","JavaScript","GatsbyJS","TDD"]}}},{"node":{"excerpt":"Introduction It's a bit more than an year since I've jotted about GraphQL. During this time, I haven't had the opportunity to use GraphQL in production. Rather, like with other tools on the market, I've only followed up reading articles and doing some (quite rare) queries while working on my Gatsby blog. As I joined the GraphQL day yesterday, I feel it's worth making another small article for…","frontmatter":{"title":"Getting better with GraphQL","slug":"getting-better-with-graphql","tags":["GraphQL","WebDev"]}}},{"node":{"excerpt":"Introduction Using Flow in a project to define types and interfaces is a beneficial practice for improving consistency and productivity. Tickling with the CLI, I noticed an  comman and wondered whether it will be possible to re-use the information from Flow to generate documentation or specification. With my previous experience of generating OpenAPI specification out of code annotations in JSDoc I…","frontmatter":{"title":"Theming documentation.js","slug":"theming-documentationjs","tags":["documentation","JavaScript","DocumentationJs"]}}},{"node":{"excerpt":"Introduction As I have previously mentioned, NetlifyCMS is one of the most flexible \"CMS\" applications on the market at the moment. In the past you had to tweak both GatsbyJS and Netlify service configurations, so that the output of first was useful for the second. I shared about these details in a story about migrating from Hugo to GatsbyJS. Few weeks after these shared stories, Netlify released…","frontmatter":{"title":"Having a CMS for GatsbyJS - easier than ever!","slug":"cms-gatsbyjs","tags":["JAMStack","JavaScript","GatsbyJS"]}}},{"node":{"excerpt":"The fact that you have opened this article means that you are already aware of one the biggest problems of Macbook Pro 2016+ models - the touchbar. The touchbar is something Apple have decided to enforce on users as part of their keyboards. It's not a problem per-se for most users and certainly the bar can serve as a good tool if used properly. The bar becomes a problem for developers, system…","frontmatter":{"title":"Escape button in Macbook Pro without using toucbar","slug":"escaping-macbook-pro-touchbar","tags":["Macbook","MacOS","Productivity","Keyboard"]}}},{"node":{"excerpt":"Introduction After the recent migration from Medium to Hugo I continued digging into the JAM stack and GatsbyJS, as having a statically generated site for my blog is working well so far. I could have taken a ready template to mimic design and keep content and make another quick release. Though, for this migration, I decided to spent time taking concrete steps I consider reusable: Content migration…","frontmatter":{"title":"Migrate from Hugo to GatsbyJS","slug":"migrate-hugo-gatsby","tags":["JavaScript","JAMStack","GatsbyJS"]}}}],"first":true,"last":false,"index":1}}}