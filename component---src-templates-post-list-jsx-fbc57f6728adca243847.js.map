{"version":3,"sources":["webpack:///./src/components/ListItemToPostTeaser.jsx","webpack:///./src/templates/postList.jsx","webpack:///./src/utils/getRandomKey.js"],"names":["Post","node","excerpt","frontmatter","title","slug","to","BlogPagedIndex","pathContext","group","index","first","last","htmlAttributes","lang","charSet","name","content","className","map","ListItemToPostTeaser","key","getRandomKey","style","display","justifyContent","paddingTop","Math","floor","random"],"mappings":"iKAkBeA,EAdF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACNC,EAAYD,EAAKA,KAAjBC,QADiB,EAEDD,EAAKA,KAAKE,YAA1BC,EAFiB,EAEjBA,MAAOC,EAFU,EAEVA,KAEf,OACE,4BACE,kBAAC,IAAD,CAAMC,GAAE,IAAMD,GACZ,4BAAKD,GACL,2BAAIF,MCuCGK,UA3CQ,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAChBC,EAA8BD,EAA9BC,MAAOC,EAAuBF,EAAvBE,MAAOC,EAAgBH,EAAhBG,MAAOC,EAASJ,EAATI,KAC7B,OACE,6BACE,kBAAC,IAAD,CAAQC,eAAgB,CAAEC,KAAK,OAC7B,0BAAMC,QAAQ,UACd,0BACEC,KAAK,WACLC,QAAQ,2DAEV,wDAEF,wBAAIC,UAAU,WACXT,EAAMU,IAAI,SAAAlB,GAAI,OACb,kBAACmB,EAAD,CAAsBC,IAAKC,cAAgBrB,KAAMA,OAIrD,yBACEsB,MAAO,CACLC,QAAQ,OACRC,eAAe,gBACfC,WAAW,UAGXf,GACA,kBAAC,IAAD,CAAML,GAAE,aAAcI,EAAQ,EAAIA,EAAQ,EAAI,KAA9C,gBAEAE,GAAQ,kBAAC,IAAD,CAAMN,GAAE,aAAcI,EAAQ,IAA9B,mB,iCCpCH,sBAAMiB,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM","file":"component---src-templates-post-list-jsx-fbc57f6728adca243847.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'gatsby-link';\n\nconst Post = ({ node }) => {\n  const { excerpt } = node.node;\n  const { title, slug } = node.node.frontmatter;\n\n  return (\n    <li>\n      <Link to={`/${slug}`}>\n        <h3>{title}</h3>\n        <p>{excerpt}</p>\n      </Link>\n    </li>\n  );\n};\n\nexport default Post;\n\nPost.propTypes = {\n  node: PropTypes.shape({}).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport Link from 'gatsby-link';\nimport getRandomKey from '../utils/getRandomKey';\n\nimport ListItemToPostTeaser from '../components/ListItemToPostTeaser';\n\nconst BlogPagedIndex = ({ pathContext }) => {\n  const { group, index, first, last } = pathContext;\n  return (\n    <div>\n      <Helmet htmlAttributes={{ lang: `en` }}>\n        <meta charSet=\"utf-8\" />\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width, initial-scale=1.0 shrink-to-fit=no\"\n        />\n        <title>Kalin Chernev | Blog</title>\n      </Helmet>\n      <ul className=\"listing\">\n        {group.map(node => (\n          <ListItemToPostTeaser key={getRandomKey()} node={node} />\n        ))}\n      </ul>\n\n      <div\n        style={{\n          display: `flex`,\n          justifyContent: `space-between`,\n          paddingTop: `1rem`,\n        }}\n      >\n        {!first && (\n          <Link to={`/history/${index > 2 ? index - 1 : ''}`}>Newer posts</Link>\n        )}\n        {!last && <Link to={`/history/${index + 1}`}>Older posts</Link>}\n      </div>\n    </div>\n  );\n};\n\nBlogPagedIndex.propTypes = {\n  pathContext: PropTypes.shape({\n    group: PropTypes.array.isRequired,\n    index: PropTypes.number.isRequired,\n    first: PropTypes.bool.isRequired,\n    last: PropTypes.bool.isRequired,\n  }).isRequired,\n};\n\nexport default BlogPagedIndex;\n","export default () => Math.floor(Math.random() * Math.floor(1000));\n"],"sourceRoot":""}