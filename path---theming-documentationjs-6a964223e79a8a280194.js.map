{"version":3,"sources":["webpack:///path---theming-documentationjs-6a964223e79a8a280194.js","webpack:///./.cache/json/theming-documentationjs.json"],"names":["webpackJsonp","620","module","exports","data","markdownRemark","frontmatter","title","date","tags","timeToRead","html","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,aAAeC,MAAA,2BAAAC,KAAA,2BAAAC,MAAA,iDAA6HC,WAAA,EAAAC,KAAA,6uZAA6uaC,aAAgBC,KAAA","file":"path---theming-documentationjs-6a964223e79a8a280194.js","sourcesContent":["webpackJsonp([190508315458854],{\n\n/***/ 620:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"frontmatter\":{\"title\":\"Theming documentation.js\",\"date\":\"2018-02-18T00:00:00.000Z\",\"tags\":[\"documentation\",\"JavaScript\",\"DocumentationJs\"]},\"timeToRead\":4,\"html\":\"<h2 id=\\\"introduction\\\"><a href=\\\"#introduction\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Introduction</h2>\\n<p>Using <a href=\\\"https://flow.org/\\\">Flow</a> in a project to define types and interfaces is a beneficial practice for improving consistency and productivity. Tickling with the CLI, I noticed an <code class=\\\"language-text\\\">ast</code> comman and wondered whether it will be possible to re-use the information from Flow to generate documentation or specification. With <a href=\\\"/agile-documentation-api-driven-project\\\">my previous experience</a> of generating <a href=\\\"https://www.openapis.org/\\\">OpenAPI specification</a> out of code annotations in <a href=\\\"http://usejsdoc.org/\\\">JSDoc</a> I searched a way to take existing types and annotations in code and generate living documentation/specification.</p>\\n<p>The tool which came into light is called <a href=\\\"http://documentation.js.org/\\\">documentation.js</a>. The project is almost 3 years old (<code class=\\\"language-text\\\">curl https://api.github.com/repos/documentationjs/documentation</code>) and mature enough to serve my purpose. Best part, it <a href=\\\"https://github.com/documentationjs/documentation/blob/master/docs/GETTING_STARTED.md\\\">supports both Flow and JSDoc at the same time</a>.</p>\\n<p>The documentation about documentation.js, however, is not too much. In fact, the <a href=\\\"https://github.com/documentationjs/documentation/blob/master/docs/THEMING.md\\\">theming guide</a> is merely 2 paragraphs wrapping an existing types annotations which are in code. As understandable this is, the most useful starting point in reality is the <a href=\\\"https://github.com/documentationjs/documentation/tree/master/src/default_theme\\\">default theme</a>.</p>\\n<p>With this article, I will share some high-level thoughts on how to approach the creation of a theme for documentation.js and hopefully it will serve as a complementary resource to those in need of some deeper knowledge about the theming system on top of the annotations.</p>\\n<h3 id=\\\"development-environment\\\"><a href=\\\"#development-environment\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Development environment</h3>\\n<p>If you start from the default theme, you will have few <a href=\\\"https://lodash.com/docs/4.17.5#template\\\">lodash templates</a> and all other assets, like highlight.js styles and anchor.js scripts are stored in the theme. From here, it's up to you to improve and make things move convenient for yourself.</p>\\n<p>These worked well for me:</p>\\n<ul>\\n<li>Separate the theme out of the documentation.js repository and make an npm project creating a <code class=\\\"language-text\\\">package.json</code>.</li>\\n<li>Add <code class=\\\"language-text\\\">webpack</code> or any other bundler of choice in the stack, that will improve assets.</li>\\n<li>Take out vendor dependencies out of the repository and add them as development dependencies to the project.</li>\\n<li>Find a tool to hot reload your browser during development in a given folder.</li>\\n<li>Create a folder with an example where you put code with Flow types and JSDoc annotations.</li>\\n</ul>\\n<p>You can get <strong>the setup which worked for me</strong> from <a href=\\\"https://github.com/kalinchernev/documentation-theme-ecl\\\">this project</a>.</p>\\n<h3 id=\\\"what-documentationjs-does\\\"><a href=\\\"#what-documentationjs-does\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>What documentation.js does</h3>\\n<p>As briefly pointed out in the Node API documentation, there are 2 main tools that are used: <a href=\\\"https://github.com/documentationjs/documentation/blob/master/docs/NODE_API.md#build\\\">build</a> and <a href=\\\"https://github.com/documentationjs/documentation/blob/master/docs/NODE_API.md#formats\\\">formats</a>. Take note - they are still separate!</p>\\n<p>This means that when you have created Flow types and JSDoc annotations, running the build command will give you something like:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"json\\\">\\n      <pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> ...\\n  <span class=\\\"token punctuation\\\">{</span> ...\\n  <span class=\\\"token punctuation\\\">{</span> ...\\n  <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"description\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token property\\\">\\\"type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"root\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token property\\\">\\\"children\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span> ...\\n      <span class=\\\"token property\\\">\\\"position\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> ...\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"tags\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"title\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"name\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"description\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token null\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"lineNumber\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"ProjectModuleExample\\\"</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"title\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"param\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"description\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Some object to work with\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"lineNumber\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> ...\\n        <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"input\\\"</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"title\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"returns\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"description\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"JSON matching the type fields.\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"lineNumber\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> ...\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"loc\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> ...\\n    <span class=\\\"token property\\\">\\\"context\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> ...\\n    <span class=\\\"token property\\\">\\\"augments\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"examples\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"params\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span> ...\\n    <span class=\\\"token property\\\">\\\"properties\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"returns\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span> ...\\n    <span class=\\\"token property\\\">\\\"sees\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"throws\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"todos\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"ProjectModuleExample\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"members\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> ...\\n    <span class=\\\"token property\\\">\\\"path\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span> ...\\n    <span class=\\\"token property\\\">\\\"namespace\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"ProjectModuleExample\\\"</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span></code></pre>\\n      </div>\\n<p>This information provided by documentation.js is the most useful part of the whole story. Later, you pass this information down to another system which will <code class=\\\"language-text\\\">format</code> the data structure into a nice visualization.</p>\\n<p>This is what the <a href=\\\"https://github.com/documentationjs/documentation/blob/master/docs/NODE_API.md#formatshtml\\\">formats</a> function does. And the default theme implementation shows an example of how to use a lodash template to render this information.</p>\\n<p>Obviously, you can choose another way to render the information - it's up to you. You might want to use the build task with another formatter.</p>\\n<h3 id=\\\"conclusions\\\"><a href=\\\"#conclusions\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Conclusions</h3>\\n<p>Documentation is important and being able to re-use code annotations and types from your repository to generate further assets and specifications is a great opportunity. The documentation.js tool gives you a good way to build a tree of this information which you can later theme with a branding and rendering system of your choice.</p>\\n<p>Enjoy!</p>\"}},\"pathContext\":{\"slug\":\"theming-documentationjs\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---theming-documentationjs-6a964223e79a8a280194.js","module.exports = {\"data\":{\"markdownRemark\":{\"frontmatter\":{\"title\":\"Theming documentation.js\",\"date\":\"2018-02-18T00:00:00.000Z\",\"tags\":[\"documentation\",\"JavaScript\",\"DocumentationJs\"]},\"timeToRead\":4,\"html\":\"<h2 id=\\\"introduction\\\"><a href=\\\"#introduction\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Introduction</h2>\\n<p>Using <a href=\\\"https://flow.org/\\\">Flow</a> in a project to define types and interfaces is a beneficial practice for improving consistency and productivity. Tickling with the CLI, I noticed an <code class=\\\"language-text\\\">ast</code> comman and wondered whether it will be possible to re-use the information from Flow to generate documentation or specification. With <a href=\\\"/agile-documentation-api-driven-project\\\">my previous experience</a> of generating <a href=\\\"https://www.openapis.org/\\\">OpenAPI specification</a> out of code annotations in <a href=\\\"http://usejsdoc.org/\\\">JSDoc</a> I searched a way to take existing types and annotations in code and generate living documentation/specification.</p>\\n<p>The tool which came into light is called <a href=\\\"http://documentation.js.org/\\\">documentation.js</a>. The project is almost 3 years old (<code class=\\\"language-text\\\">curl https://api.github.com/repos/documentationjs/documentation</code>) and mature enough to serve my purpose. Best part, it <a href=\\\"https://github.com/documentationjs/documentation/blob/master/docs/GETTING_STARTED.md\\\">supports both Flow and JSDoc at the same time</a>.</p>\\n<p>The documentation about documentation.js, however, is not too much. In fact, the <a href=\\\"https://github.com/documentationjs/documentation/blob/master/docs/THEMING.md\\\">theming guide</a> is merely 2 paragraphs wrapping an existing types annotations which are in code. As understandable this is, the most useful starting point in reality is the <a href=\\\"https://github.com/documentationjs/documentation/tree/master/src/default_theme\\\">default theme</a>.</p>\\n<p>With this article, I will share some high-level thoughts on how to approach the creation of a theme for documentation.js and hopefully it will serve as a complementary resource to those in need of some deeper knowledge about the theming system on top of the annotations.</p>\\n<h3 id=\\\"development-environment\\\"><a href=\\\"#development-environment\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Development environment</h3>\\n<p>If you start from the default theme, you will have few <a href=\\\"https://lodash.com/docs/4.17.5#template\\\">lodash templates</a> and all other assets, like highlight.js styles and anchor.js scripts are stored in the theme. From here, it's up to you to improve and make things move convenient for yourself.</p>\\n<p>These worked well for me:</p>\\n<ul>\\n<li>Separate the theme out of the documentation.js repository and make an npm project creating a <code class=\\\"language-text\\\">package.json</code>.</li>\\n<li>Add <code class=\\\"language-text\\\">webpack</code> or any other bundler of choice in the stack, that will improve assets.</li>\\n<li>Take out vendor dependencies out of the repository and add them as development dependencies to the project.</li>\\n<li>Find a tool to hot reload your browser during development in a given folder.</li>\\n<li>Create a folder with an example where you put code with Flow types and JSDoc annotations.</li>\\n</ul>\\n<p>You can get <strong>the setup which worked for me</strong> from <a href=\\\"https://github.com/kalinchernev/documentation-theme-ecl\\\">this project</a>.</p>\\n<h3 id=\\\"what-documentationjs-does\\\"><a href=\\\"#what-documentationjs-does\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>What documentation.js does</h3>\\n<p>As briefly pointed out in the Node API documentation, there are 2 main tools that are used: <a href=\\\"https://github.com/documentationjs/documentation/blob/master/docs/NODE_API.md#build\\\">build</a> and <a href=\\\"https://github.com/documentationjs/documentation/blob/master/docs/NODE_API.md#formats\\\">formats</a>. Take note - they are still separate!</p>\\n<p>This means that when you have created Flow types and JSDoc annotations, running the build command will give you something like:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"json\\\">\\n      <pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span> ...\\n  <span class=\\\"token punctuation\\\">{</span> ...\\n  <span class=\\\"token punctuation\\\">{</span> ...\\n  <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"description\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token property\\\">\\\"type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"root\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token property\\\">\\\"children\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span> ...\\n      <span class=\\\"token property\\\">\\\"position\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> ...\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"tags\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"title\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"name\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"description\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token null\\\">null</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"lineNumber\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"ProjectModuleExample\\\"</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"title\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"param\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"description\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"Some object to work with\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"lineNumber\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> ...\\n        <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"input\\\"</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token property\\\">\\\"title\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"returns\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"description\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"JSON matching the type fields.\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"lineNumber\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token property\\\">\\\"type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> ...\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"loc\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> ...\\n    <span class=\\\"token property\\\">\\\"context\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> ...\\n    <span class=\\\"token property\\\">\\\"augments\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"examples\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"params\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span> ...\\n    <span class=\\\"token property\\\">\\\"properties\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"returns\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span> ...\\n    <span class=\\\"token property\\\">\\\"sees\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"throws\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"todos\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"ProjectModuleExample\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"members\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> ...\\n    <span class=\\\"token property\\\">\\\"path\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span> ...\\n    <span class=\\\"token property\\\">\\\"namespace\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"ProjectModuleExample\\\"</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span></code></pre>\\n      </div>\\n<p>This information provided by documentation.js is the most useful part of the whole story. Later, you pass this information down to another system which will <code class=\\\"language-text\\\">format</code> the data structure into a nice visualization.</p>\\n<p>This is what the <a href=\\\"https://github.com/documentationjs/documentation/blob/master/docs/NODE_API.md#formatshtml\\\">formats</a> function does. And the default theme implementation shows an example of how to use a lodash template to render this information.</p>\\n<p>Obviously, you can choose another way to render the information - it's up to you. You might want to use the build task with another formatter.</p>\\n<h3 id=\\\"conclusions\\\"><a href=\\\"#conclusions\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Conclusions</h3>\\n<p>Documentation is important and being able to re-use code annotations and types from your repository to generate further assets and specifications is a great opportunity. The documentation.js tool gives you a good way to build a tree of this information which you can later theme with a branding and rendering system of your choice.</p>\\n<p>Enjoy!</p>\"}},\"pathContext\":{\"slug\":\"theming-documentationjs\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/theming-documentationjs.json\n// module id = 620\n// module chunks = 190508315458854"],"sourceRoot":""}